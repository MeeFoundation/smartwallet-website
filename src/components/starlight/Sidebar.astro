---
import type { Props } from "@astrojs/starlight/props";
import { AstroError } from "astro/errors";
import SidebarSublist from "./SidebarSublist.astro";

// Recursively check if a group of sidebar entries contains the current page
const findIfIsCurrent = (
  entry: (typeof Astro.props.sidebar)[number],
): boolean => {
  if (entry.type === "link") {
    return entry.isCurrent;
  }
  return entry.entries.some((item) => findIfIsCurrent(item));
};

const multiSidebarConfig: [string, boolean, Props][] = Astro.props.sidebar.map(
  (entry) => {
    if (entry.type !== "group") {
      throw new AstroError(
        `\`${entry.label}\` cannot be used with multiple Starlight sidebars.
  Each top-level \`sidebar\` item in the Starlight config must be either a group or autogenerated.
  See https://starlight.astro.build/guides/sidebar/#groups and https://starlight.astro.build/guides/sidebar/#autogenerated-groups`,
      );
    }

    const isCurrentPage = findIfIsCurrent(entry);
    return [
      entry.label,
      isCurrentPage,
      { ...Astro.props, sidebar: [...entry.entries] },
    ];
  },
);
---

<div class="__collapse">
  {
    multiSidebarConfig.map(([label, isCurrentPage, config]) => (
      <>
        <input
          type="radio"
          name="sidebar"
          role="tab"
          aria-label={label}
          checked={isCurrentPage}
        />
        <div class="__collapse-content mt-4">
          <SidebarSublist sublist={config.sidebar} />
        </div>
      </>
    ))
  }
</div>

<style>
  .__collapse > input {
    display: none;
  }

  .__collapse > .__collapse-content {
    display: none;
  }
  .__collapse > input:checked + .__collapse-content {
    display: block;
  }
</style>
